((iFreeze (iGrab) (iMark) (iAccess 0) (iConst shen.<predicate*>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 0) (iConst shen.<clauses*>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iMark) (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iFreeze (iGrab) (iAccess 0) (iMark) (iAccess 2) (iConst shen.hdtl) (iGetF) (iApply) (iConst shen.insert-predicate) (iGetF) (iTailApply)) (iConst map) (iGetF) (iApply) (iConst shen.prolog->shen) (iGetF) (iApply) (iPrimCall 32) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iConst shen.<defprolog>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst "prolog syntax error in ") (iMark) (iConst shen.a) (iConst " here:

 ") (iMark) (iConst shen.a) (iConst "
") (iMark) (iAccess 0) (iPrimCall 32) (iConst 50) (iConst shen.next-50) (iGetF) (iApply) (iConst shen.app) (iGetF) (iApply) (iPrimCall 30) (iAccess 1) (iConst shen.app) (iGetF) (iApply) (iPrimCall 30) (iPrimCall 18) (iReturn)) (iJMP (iConst true) (iJF (iConst "prolog syntax error in ") (iMark) (iConst shen.a) (iConst "
") (iAccess 1) (iConst shen.app) (iGetF) (iApply) (iPrimCall 30) (iPrimCall 18) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.prolog-error) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iConst ()) (iAccess 0) (iPrimCall 19) (iJF (iConst "") (iReturn)) (iJMP (iConst 0) (iAccess 1) (iPrimCall 19) (iJF (iConst "") (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iMark) (iAccess 0) (iPrimCall 32) (iConst shen.decons-string) (iGetF) (iApply) (iMark) (iAccess 0) (iPrimCall 33) (iAccess 1) (iConst 1) (iPrimCall 20) (iConst shen.next-50) (iGetF) (iApply) (iPrimCall 30) (iReturn)) (iJMP (iConst true) (iJF (iConst shen.next-50) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))))) (iConst shen.next-50) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst cons) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst shen.s) (iConst " ") (iMark) (iAccess 0) (iConst shen.eval-cons) (iGetF) (iApply) (iConst shen.app) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.r) (iConst " ") (iAccess 0) (iConst shen.app) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.decons-string) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 1) (iAccess 0) (iPrimCall 32) (iPrimCall 34) (iConst :-) (iAccess 0) (iPrimCall 33) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iConst shen.insert-predicate) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.insert-predicate) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 32) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 32) (iFreeze (iGrab) (iAccess 0) (iMark) (iMark) (iAccess 1) (iConst shen.hdtl) (iGetF) (iApply) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iConst shen.pair) (iGetF) (iApply) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iConst shen.<predicate*>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iMark) (iAccess 0) (iConst shen.<clause*>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 0) (iConst shen.<clauses*>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 1) (iConst shen.hdtl) (iGetF) (iApply) (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iPrimCall 34) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iApply) (iFreeze (iGrab) (iAccess 0) (iMark) (iConst fail) (iGetF) (iApply) (iPrimCall 19) (iJF (iMark) (iAccess 1) (iConst <e>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iConst ()) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iAccess 0) (iReturn))) (iTailApply)) (iConst shen.<clauses*>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iAccess 0) (iConst shen.<head*>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 35) (iJF (iConst <--) (iAccess 0) (iPrimCall 32) (iPrimCall 32) (iPrimCall 19)) (iJMP (iConst false)) (iJF (iMark) (iMark) (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iAccess 0) (iPrimCall 32) (iPrimCall 33) (iConst shen.pair) (iGetF) (iApply) (iConst shen.<body*>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 0) (iConst shen.<end*>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 2) (iConst shen.hdtl) (iGetF) (iApply) (iMark) (iAccess 1) (iConst shen.hdtl) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iConst shen.<clause*>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iMark) (iAccess 0) (iConst shen.<term*>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 0) (iConst shen.<head*>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 1) (iConst shen.hdtl) (iGetF) (iApply) (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iPrimCall 34) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iApply) (iFreeze (iGrab) (iAccess 0) (iMark) (iConst fail) (iGetF) (iApply) (iPrimCall 19) (iJF (iMark) (iAccess 1) (iConst <e>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iConst ()) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iAccess 0) (iReturn))) (iTailApply)) (iConst shen.<head*>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 32) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 32) (iFreeze (iGrab) (iConst <--) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 0) (iConst shen.legitimate-term?) (iGetF) (iApply)) (iJMP (iConst false)) (iJF (iMark) (iAccess 0) (iConst shen.eval-cons) (iGetF) (iApply) (iMark) (iMark) (iAccess 1) (iConst shen.hdtl) (iGetF) (iApply) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iConst shen.pair) (iGetF) (iApply) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iConst shen.<term*>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst cons) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst shen.legitimate-term?) (iGetF) (iApply) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst shen.legitimate-term?) (iGetF) (iTailApply)) (iJMP (iConst false) (iReturn))) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst mode) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst +) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst shen.legitimate-term?) (iGetF) (iTailApply)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst mode) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst -) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst shen.legitimate-term?) (iGetF) (iTailApply)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst false) (iReturn)) (iJMP (iConst true) (iJF (iConst true) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))))) (iConst shen.legitimate-term?) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst cons) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst shen.eval-cons) (iGetF) (iApply) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst shen.eval-cons) (iGetF) (iApply) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst mode) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst mode) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst shen.eval-cons) (iGetF) (iApply) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.eval-cons) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iMark) (iAccess 0) (iConst shen.<literal*>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 0) (iConst shen.<body*>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 1) (iConst shen.hdtl) (iGetF) (iApply) (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iPrimCall 34) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iApply) (iFreeze (iGrab) (iAccess 0) (iMark) (iConst fail) (iGetF) (iApply) (iPrimCall 19) (iJF (iMark) (iAccess 1) (iConst <e>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iConst ()) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iAccess 0) (iReturn))) (iTailApply)) (iConst shen.<body*>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 32) (iPrimCall 35) (iJF (iConst !) (iAccess 0) (iPrimCall 32) (iPrimCall 32) (iPrimCall 19)) (iJMP (iConst false)) (iJF (iMark) (iConst cut) (iConst "Throwcontrol") (iPrimCall 31) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iMark) (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iAccess 0) (iPrimCall 32) (iPrimCall 33) (iConst shen.pair) (iGetF) (iApply) (iPrimCall 32) (iConst shen.pair) (iGetF) (iApply)) (iJMP (iMark) (iConst fail) (iGetF) (iApply)) (iFreeze (iGrab) (iAccess 0) (iMark) (iConst fail) (iGetF) (iApply) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 32) (iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iMark) (iMark) (iAccess 2) (iConst shen.hdtl) (iGetF) (iApply) (iAccess 2) (iPrimCall 32) (iPrimCall 33) (iConst shen.pair) (iGetF) (iApply) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iJMP (iAccess 0) (iReturn))) (iTailApply)) (iConst shen.<literal*>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 32) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 32) (iFreeze (iGrab) (iAccess 0) (iConst ;) (iPrimCall 19) (iJF (iAccess 0) (iMark) (iMark) (iAccess 1) (iConst shen.hdtl) (iGetF) (iApply) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iConst shen.pair) (iGetF) (iApply) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iConst shen.<end*>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iMark) (iAccess 0) (iConst thaw) (iGetF) (iApply) (iFreeze (iGrab) (iAccess 0) (iConst false) (iPrimCall 19) (iJF (iAccess 3) (iReturn)) (iJMP (iAccess 0) (iReturn))) (iTailApply)) (iConst cut) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst mode) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iReturn)) (iJMP (iConst ()) (iAccess 0) (iPrimCall 19) (iJF (iConst ()) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst mode) (iAccess 0) (iPrimCall 32) (iConst +) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst mode) (iMark) (iAccess 0) (iPrimCall 33) (iConst shen.insert_modes) (iGetF) (iApply) (iConst -) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))))) (iConst shen.insert_modes) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iAccess 0) (iConst shen.prolog->shen) (iGetF) (iApply) (iFreeze (iGrab) (iAccess 0) (iConst eval) (iGetF) (iTailApply)) (iConst map) (iGetF) (iTailApply)) (iConst shen.s-prolog) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iMark) (iMark) (iAccess 0) (iFreeze (iGrab) (iAccess 0) (iConst shen.head_abstraction) (iGetF) (iTailApply)) (iConst mapcan) (iGetF) (iApply) (iFreeze (iGrab) (iAccess 0) (iConst shen.s-prolog_clause) (iGetF) (iTailApply)) (iConst map) (iGetF) (iApply) (iConst shen.group_clauses) (iGetF) (iApply) (iFreeze (iGrab) (iAccess 0) (iConst shen.compile_prolog_procedure) (iGetF) (iTailApply)) (iConst map) (iGetF) (iTailApply)) (iConst shen.prolog->shen) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst :-) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iPrimCall 32) (iConst :-) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iFreeze (iGrab) (iAccess 0) (iConst shen.s-prolog_literal) (iGetF) (iTailApply)) (iConst map) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iConst shen.s-prolog_clause) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.s-prolog_clause) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst :-) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iFreeze (iGrab) (iConst false) (iReturn)) (iSetJmp (iMark) (iAccess 0) (iPrimCall 32) (iConst shen.complexity_head) (iGetF) (iApply) (iConst shen.*maxcomplexity*) (iPrimCall 36) (iPrimCall 15) (iClearJmp))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iConst ()) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst :-) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iMark) (iAccess 0) (iPrimCall 32) (iPrimCall 33) (iFreeze (iGrab) (iConst V) (iConst gensym) (iGetF) (iTailApply)) (iConst map) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iMark) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iConst shen.remove_modes) (iGetF) (iApply) (iConst shen.rcons_form) (iGetF) (iApply) (iFreeze (iGrab) (iConst unify) (iMark) (iAccess 1) (iConst shen.cons_form) (iGetF) (iApply) (iAccess 0) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iFreeze (iGrab) (iAccess 3) (iPrimCall 32) (iPrimCall 32) (iAccess 2) (iPrimCall 34) (iConst :-) (iAccess 0) (iAccess 3) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iFreeze (iGrab) (iAccess 0) (iConst ()) (iPrimCall 34) (iReturn)) (iTailApply)) (iTailApply)) (iTailApply)) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.head_abstraction) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.head_abstraction) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iMark) (iAccess 0) (iPrimCall 33) (iFreeze (iGrab) (iAccess 0) (iConst shen.complexity) (iGetF) (iTailApply)) (iConst map) (iGetF) (iApply) (iConst shen.safe-product) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.complexity_head) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.complexity_head) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iAccess 1) (iAccess 0) (iPrimCall 21) (iReturn)) (iConst shen.safe-multiply) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst mode) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 35) (iJF (iConst mode) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst shen.complexity) (iGetF) (iTailApply)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst mode) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst +) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iMark) (iMark) (iConst mode) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 33) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 34) (iPrimCall 34) (iConst shen.complexity) (iGetF) (iApply) (iMark) (iConst mode) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 32) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 34) (iPrimCall 34) (iConst shen.complexity) (iGetF) (iApply) (iConst shen.safe-multiply) (iGetF) (iApply) (iConst 2) (iConst shen.safe-multiply) (iGetF) (iTailApply)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst mode) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst -) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iMark) (iConst mode) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 33) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 34) (iPrimCall 34) (iConst shen.complexity) (iGetF) (iApply) (iMark) (iConst mode) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 32) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 34) (iPrimCall 34) (iConst shen.complexity) (iGetF) (iApply) (iConst shen.safe-multiply) (iGetF) (iTailApply)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst mode) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 45)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst 1) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst mode) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst +) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst 2) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst mode) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst -) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst 1) (iReturn)) (iJMP (iConst true) (iJF (iConst mode) (iAccess 0) (iConst +) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst shen.complexity) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))))))) (iConst shen.complexity) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst ()) (iAccess 0) (iPrimCall 19) (iJF (iConst 1) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iMark) (iAccess 0) (iPrimCall 33) (iConst shen.safe-product) (iGetF) (iApply) (iAccess 0) (iPrimCall 32) (iConst shen.safe-multiply) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.safe-product) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.safe-product) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst is) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst bind) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst shen.insert_deref) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst when) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst fwhen) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst shen.insert_deref) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst bind) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst bind) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst shen.insert_lazyderef) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst fwhen) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst fwhen) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst shen.insert_lazyderef) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iReturn)) (iJMP (iConst true) (iJF (iConst shen.s-prolog_literal) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))))))) (iConst shen.s-prolog_literal) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 45) (iJF (iConst shen.deref) (iAccess 0) (iConst ProcessN) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iMark) (iAccess 0) (iPrimCall 32) (iConst shen.insert_deref) (iGetF) (iApply) (iMark) (iAccess 0) (iPrimCall 33) (iConst shen.insert_deref) (iGetF) (iApply) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.insert_deref) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 45) (iJF (iConst shen.lazyderef) (iAccess 0) (iConst ProcessN) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iMark) (iAccess 0) (iPrimCall 32) (iConst shen.insert_lazyderef) (iGetF) (iApply) (iMark) (iAccess 0) (iPrimCall 33) (iConst shen.insert_lazyderef) (iGetF) (iApply) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.insert_lazyderef) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst ()) (iAccess 0) (iPrimCall 19) (iJF (iConst ()) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iMark) (iAccess 0) (iFreeze (iGrab) (iAccess 0) (iAccess 1) (iPrimCall 32) (iConst shen.same_predicate?) (iGetF) (iTailApply)) (iConst shen.collect) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iAccess 0) (iAccess 1) (iConst difference) (iGetF) (iApply) (iFreeze (iGrab) (iAccess 1) (iMark) (iAccess 0) (iConst shen.group_clauses) (iGetF) (iApply) (iPrimCall 34) (iReturn)) (iTailApply)) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.group_clauses) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.group_clauses) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iConst ()) (iAccess 0) (iPrimCall 19) (iJF (iConst ()) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iMark) (iAccess 0) (iPrimCall 32) (iAccess 1) (iApply) (iJF (iAccess 0) (iPrimCall 32) (iMark) (iAccess 0) (iPrimCall 33) (iAccess 1) (iConst shen.collect) (iGetF) (iApply) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 33) (iAccess 1) (iConst shen.collect) (iGetF) (iTailApply))) (iJMP (iConst true) (iJF (iConst shen.collect) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.collect) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iAccess 1) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 35)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 32) (iAccess 0) (iPrimCall 32) (iPrimCall 32) (iPrimCall 19) (iReturn)) (iJMP (iConst true) (iJF (iConst shen.same_predicate?) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.same_predicate?) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iAccess 0) (iConst shen.procedure_name) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iAccess 1) (iAccess 0) (iConst shen.clauses-to-shen) (iGetF) (iApply) (iFreeze (iGrab) (iAccess 0) (iReturn)) (iTailApply)) (iTailApply)) (iConst shen.compile_prolog_procedure) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 32) (iPrimCall 35)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 32) (iPrimCall 32) (iReturn)) (iJMP (iConst true) (iJF (iConst shen.procedure_name) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.procedure_name) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iMark) (iAccess 0) (iFreeze (iGrab) (iAccess 0) (iConst shen.linearise-clause) (iGetF) (iTailApply)) (iConst map) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iMark) (iAccess 1) (iFreeze (iGrab) (iAccess 0) (iConst head) (iGetF) (iTailApply)) (iConst map) (iGetF) (iApply) (iAccess 2) (iConst shen.prolog-aritycheck) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iAccess 0) (iConst shen.parameters) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iAccess 2) (iFreeze (iGrab) (iAccess 1) (iAccess 0) (iConst shen.aum) (iGetF) (iTailApply)) (iConst map) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iMark) (iMark) (iAccess 0) (iFreeze (iGrab) (iAccess 0) (iConst shen.aum_to_shen) (iGetF) (iTailApply)) (iConst map) (iGetF) (iApply) (iConst shen.nest-disjunct) (iGetF) (iApply) (iConst shen.catch-cut) (iGetF) (iApply) (iFreeze (iGrab) (iConst define) (iAccess 6) (iMark) (iMark) (iConst ->) (iAccess 0) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ProcessN) (iConst Continuation) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst append) (iGetF) (iApply) (iAccess 2) (iConst append) (iGetF) (iApply) (iPrimCall 34) (iPrimCall 34) (iFreeze (iGrab) (iAccess 0) (iReturn)) (iTailApply)) (iTailApply)) (iTailApply)) (iTailApply)) (iTailApply)) (iTailApply)) (iConst shen.clauses-to-shen) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iAccess 0) (iConst cut) (iConst shen.occurs?) (iGetF) (iApply) (iPrimCall 38) (iJF (iAccess 0) (iReturn)) (iJMP (iConst true) (iJF (iConst let) (iConst Throwcontrol) (iConst shen.catchpoint) (iConst ()) (iPrimCall 34) (iConst shen.cutpoint) (iConst Throwcontrol) (iAccess 0) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.catch-cut) (iDefun) (iReturn) (iHalt))

((iFreeze (iConst shen.*catch*) (iConst 1) (iConst shen.*catch*) (iPrimCall 36) (iPrimCall 23) (iPrimCall 37) (iReturn)) (iConst shen.catchpoint) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iAccess 0) (iAccess 1) (iPrimCall 19) (iJF (iConst false) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.cutpoint) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false)) (iJF (iAccess 0) (iPrimCall 32) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iMark) (iAccess 0) (iPrimCall 33) (iConst shen.nest-disjunct) (iGetF) (iApply) (iAccess 0) (iPrimCall 32) (iConst shen.lisp-or) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.nest-disjunct) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.nest-disjunct) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iConst let) (iConst Case) (iAccess 1) (iConst if) (iConst =) (iConst Case) (iConst false) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iAccess 0) (iConst Case) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iConst shen.lisp-or) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false)) (iJF (iMark) (iAccess 0) (iPrimCall 32) (iConst length) (iGetF) (iApply) (iConst 1) (iPrimCall 20) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35)) (iJMP (iConst false)) (iJF (iMark) (iAccess 0) (iPrimCall 32) (iConst length) (iGetF) (iApply) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst length) (iGetF) (iApply) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iAccess 1) (iConst shen.prolog-aritycheck) (iGetF) (iTailApply)) (iJMP (iConst "arity error in prolog procedure ") (iMark) (iConst shen.a) (iConst "
") (iAccess 1) (iConst ()) (iPrimCall 34) (iConst shen.app) (iGetF) (iApply) (iPrimCall 30) (iPrimCall 18) (iReturn))) (iJMP (iConst true) (iJF (iConst shen.prolog-aritycheck) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.prolog-aritycheck) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst :-) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iMark) (iAccess 0) (iPrimCall 32) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 34) (iConst shen.linearise) (iGetF) (iApply) (iFreeze (iGrab) (iAccess 0) (iConst shen.clause_form) (iGetF) (iTailApply)) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.linearise-clause) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.linearise-clause) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iMark) (iAccess 0) (iPrimCall 32) (iConst shen.explicit_modes) (iGetF) (iApply) (iConst :-) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst shen.cf_help) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iConst shen.clause_form) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.clause_form) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 32) (iMark) (iAccess 0) (iPrimCall 33) (iFreeze (iGrab) (iAccess 0) (iConst shen.em_help) (iGetF) (iTailApply)) (iConst map) (iGetF) (iApply) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iConst shen.explicit_modes) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.explicit_modes) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst mode) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iReturn)) (iJMP (iConst true) (iJF (iConst mode) (iAccess 0) (iConst +) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.em_help) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst where) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 35) (iJF (iConst =) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst shen.*occurs*) (iPrimCall 36) (iJF (iConst unify!)) (iJMP (iConst unify)) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 33) (iPrimCall 34) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst shen.cf_help) (iGetF) (iApply) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.cf_help) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst +) (iAccess 0) (iPrimCall 19) (iJF (iConst shen.*occurs*) (iConst true) (iPrimCall 37) (iReturn)) (iJMP (iConst -) (iAccess 0) (iPrimCall 19) (iJF (iConst shen.*occurs*) (iConst false) (iPrimCall 37) (iReturn)) (iJMP (iConst true) (iJF (iConst "occurs-check expects + or -
") (iPrimCall 18) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst occurs-check) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iAccess 1) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 33) (iPrimCall 35) (iJF (iConst :-) (iAccess 1) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iMark) (iAccess 0) (iConst shen.mu) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iMark) (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iConst shen.continuation_call) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst shen.make_mu_application) (iGetF) (iApply) (iFreeze (iGrab) (iConst +) (iAccess 0) (iConst shen.mu_reduction) (iGetF) (iTailApply)) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.aum) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.aum) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iConst ProcessN) (iMark) (iAccess 1) (iConst shen.extract_vars) (iGetF) (iApply) (iPrimCall 34) (iFreeze (iGrab) (iMark) (iAccess 1) (iConst shen.extract_vars) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iMark) (iAccess 1) (iAccess 0) (iConst difference) (iGetF) (iApply) (iConst Throwcontrol) (iConst remove) (iGetF) (iApply) (iFreeze (iGrab) (iAccess 3) (iAccess 0) (iConst shen.cc_help) (iGetF) (iTailApply)) (iTailApply)) (iTailApply)) (iTailApply)) (iConst shen.continuation_call) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iConst ()) (iAccess 0) (iAccess 1) (iConst shen.remove-h) (iGetF) (iTailApply)) (iConst remove) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iConst ()) (iAccess 1) (iPrimCall 19) (iJF (iAccess 0) (iConst reverse) (iGetF) (iTailApply)) (iJMP (iAccess 1) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iAccess 2) (iPrimCall 19)) (iJMP (iConst false)) (iJF (iAccess 0) (iAccess 1) (iPrimCall 33) (iAccess 1) (iPrimCall 32) (iConst shen.remove-h) (iGetF) (iTailApply)) (iJMP (iAccess 1) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iAccess 0) (iPrimCall 34) (iAccess 1) (iPrimCall 33) (iAccess 2) (iConst shen.remove-h) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.remove-h) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))))) (iConst shen.remove-h) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iConst ()) (iAccess 1) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 19)) (iJMP (iConst false)) (iJF (iConst shen.pop) (iConst shen.the) (iConst shen.stack) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst ()) (iAccess 0) (iPrimCall 19) (iJF (iConst shen.rename) (iConst shen.the) (iConst shen.variables) (iConst in) (iAccess 1) (iConst and) (iConst shen.then) (iConst shen.pop) (iConst shen.the) (iConst shen.stack) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst ()) (iAccess 1) (iPrimCall 19) (iJF (iConst call) (iConst shen.the) (iConst shen.continuation) (iAccess 0) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iConst shen.rename) (iConst shen.the) (iConst shen.variables) (iConst in) (iAccess 1) (iConst and) (iConst shen.then) (iConst call) (iConst shen.the) (iConst shen.continuation) (iAccess 0) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))))) (iConst shen.cc_help) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iAccess 1) (iPrimCall 35) (iJF (iConst shen.mu) (iAccess 1) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iReturn)) (iJMP (iAccess 1) (iPrimCall 35) (iJF (iConst shen.mu) (iAccess 1) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 33) (iPrimCall 32) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 35)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst shen.mu) (iAccess 1) (iPrimCall 33) (iPrimCall 32) (iPrimCall 32) (iMark) (iAccess 0) (iPrimCall 33) (iConst shen.mu) (iAccess 1) (iPrimCall 33) (iPrimCall 32) (iPrimCall 33) (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 34) (iPrimCall 34) (iConst shen.make_mu_application) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iAccess 0) (iPrimCall 32) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iConst shen.make_mu_application) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.make_mu_application) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iAccess 1) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 35) (iJF (iConst shen.mu) (iAccess 1) (iPrimCall 32) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iPrimCall 35) (iJF (iConst mode) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst shen.mu) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 34) (iPrimCall 34) (iAccess 1) (iPrimCall 33) (iPrimCall 34) (iConst shen.mu_reduction) (iGetF) (iTailApply)) (iJMP (iAccess 1) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 35) (iJF (iConst shen.mu) (iAccess 1) (iPrimCall 32) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iConst _) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst shen.mu_reduction) (iGetF) (iTailApply)) (iJMP (iAccess 1) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 35) (iJF (iConst shen.mu) (iAccess 1) (iPrimCall 32) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iMark) (iAccess 1) (iPrimCall 33) (iPrimCall 32) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iConst shen.ephemeral_variable?) (iGetF) (iApply)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iMark) (iAccess 0) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst shen.mu_reduction) (iGetF) (iApply) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iAccess 1) (iPrimCall 33) (iPrimCall 32) (iConst subst) (iGetF) (iTailApply)) (iJMP (iAccess 1) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 35) (iJF (iConst shen.mu) (iAccess 1) (iPrimCall 32) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iPrimCall 45)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst let) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iConst shen.be) (iAccess 1) (iPrimCall 33) (iPrimCall 32) (iConst in) (iMark) (iAccess 0) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst shen.mu_reduction) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 1) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 35) (iJF (iConst shen.mu) (iAccess 1) (iPrimCall 32) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iConst -) (iAccess 0) (iPrimCall 19) (iJF (iMark) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iConst shen.prolog_constant?) (iGetF) (iApply)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iMark) (iConst V) (iConst gensym) (iGetF) (iApply) (iFreeze (iGrab) (iConst let) (iAccess 0) (iConst shen.be) (iConst shen.the) (iConst shen.result) (iConst shen.of) (iConst shen.dereferencing) (iAccess 2) (iPrimCall 33) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst in) (iConst if) (iAccess 0) (iConst is) (iConst identical) (iConst shen.to) (iAccess 2) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst shen.then) (iMark) (iConst -) (iAccess 2) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst shen.mu_reduction) (iGetF) (iApply) (iConst shen.else) (iConst shen.failed!) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iTailApply)) (iJMP (iAccess 1) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 35) (iJF (iConst shen.mu) (iAccess 1) (iPrimCall 32) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iConst +) (iAccess 0) (iPrimCall 19) (iJF (iMark) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iConst shen.prolog_constant?) (iGetF) (iApply)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iMark) (iConst V) (iConst gensym) (iGetF) (iApply) (iFreeze (iGrab) (iConst let) (iAccess 0) (iConst shen.be) (iConst shen.the) (iConst shen.result) (iConst shen.of) (iConst shen.dereferencing) (iAccess 2) (iPrimCall 33) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst in) (iConst if) (iAccess 0) (iConst is) (iConst identical) (iConst shen.to) (iAccess 2) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst shen.then) (iMark) (iConst +) (iAccess 2) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst shen.mu_reduction) (iGetF) (iApply) (iConst shen.else) (iConst if) (iAccess 0) (iConst is) (iConst shen.a) (iConst shen.variable) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst shen.then) (iConst bind) (iAccess 0) (iConst shen.to) (iAccess 2) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iConst in) (iMark) (iConst +) (iAccess 2) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst shen.mu_reduction) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst shen.else) (iConst shen.failed!) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iTailApply)) (iJMP (iAccess 1) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 35) (iJF (iConst shen.mu) (iAccess 1) (iPrimCall 32) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iConst -) (iAccess 0) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iMark) (iConst V) (iConst gensym) (iGetF) (iApply) (iFreeze (iGrab) (iConst let) (iAccess 0) (iConst shen.be) (iConst shen.the) (iConst shen.result) (iConst shen.of) (iConst shen.dereferencing) (iAccess 2) (iPrimCall 33) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst in) (iConst if) (iAccess 0) (iConst is) (iConst shen.a) (iConst shen.non-empty) (iConst list) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst shen.then) (iMark) (iConst -) (iConst shen.mu) (iAccess 2) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iPrimCall 32) (iConst shen.mu) (iAccess 2) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iPrimCall 33) (iAccess 2) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 34) (iPrimCall 34) (iConst shen.the) (iConst tail) (iConst shen.of) (iAccess 0) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst shen.the) (iConst head) (iConst shen.of) (iAccess 0) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst shen.mu_reduction) (iGetF) (iApply) (iConst shen.else) (iConst shen.failed!) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iTailApply)) (iJMP (iAccess 1) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 35) (iJF (iConst shen.mu) (iAccess 1) (iPrimCall 32) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iConst +) (iAccess 0) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iMark) (iConst V) (iConst gensym) (iGetF) (iApply) (iFreeze (iGrab) (iConst let) (iAccess 0) (iConst shen.be) (iConst shen.the) (iConst shen.result) (iConst shen.of) (iConst shen.dereferencing) (iAccess 2) (iPrimCall 33) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst in) (iConst if) (iAccess 0) (iConst is) (iConst shen.a) (iConst shen.non-empty) (iConst list) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst shen.then) (iMark) (iConst +) (iConst shen.mu) (iAccess 2) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iPrimCall 32) (iConst shen.mu) (iAccess 2) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iPrimCall 33) (iAccess 2) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 34) (iPrimCall 34) (iConst shen.the) (iConst tail) (iConst shen.of) (iAccess 0) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst shen.the) (iConst head) (iConst shen.of) (iAccess 0) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst shen.mu_reduction) (iGetF) (iApply) (iConst shen.else) (iConst if) (iAccess 0) (iConst is) (iConst shen.a) (iConst shen.variable) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst shen.then) (iConst shen.rename) (iConst shen.the) (iConst shen.variables) (iConst in) (iMark) (iAccess 2) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iConst shen.extract_vars) (iGetF) (iApply) (iConst and) (iConst shen.then) (iConst bind) (iAccess 0) (iConst shen.to) (iMark) (iMark) (iAccess 2) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iConst shen.remove_modes) (iGetF) (iApply) (iConst shen.rcons_form) (iGetF) (iApply) (iConst in) (iMark) (iConst +) (iAccess 2) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst shen.mu_reduction) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst shen.else) (iConst shen.failed!) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iTailApply)) (iJMP (iConst true) (iJF (iAccess 1) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))))))))) (iConst shen.mu_reduction) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst cons) (iMark) (iAccess 0) (iPrimCall 32) (iConst shen.rcons_form) (iGetF) (iApply) (iMark) (iAccess 0) (iPrimCall 33) (iConst shen.rcons_form) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.rcons_form) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst mode) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst +) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst shen.remove_modes) (iGetF) (iTailApply)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst mode) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst -) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst shen.remove_modes) (iGetF) (iTailApply)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iMark) (iAccess 0) (iPrimCall 32) (iConst shen.remove_modes) (iGetF) (iApply) (iMark) (iAccess 0) (iPrimCall 33) (iConst shen.remove_modes) (iGetF) (iApply) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))))) (iConst shen.remove_modes) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iAccess 1) (iPrimCall 45) (iJF (iAccess 0) (iPrimCall 45) (iReturn)) (iJMP (iConst false) (iReturn))) (iConst shen.ephemeral_variable?) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst false) (iReturn)) (iJMP (iConst true) (iJF (iConst true) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.prolog_constant?) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst let) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst shen.be) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst in) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst let) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst shen.aum_to_shen) (iGetF) (iApply) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst shen.aum_to_shen) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst shen.the) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst shen.result) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst shen.of) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst shen.dereferencing) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst shen.lazyderef) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst shen.aum_to_shen) (iGetF) (iApply) (iConst ProcessN) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst if) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst shen.then) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst shen.else) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst if) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst shen.aum_to_shen) (iGetF) (iApply) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst shen.aum_to_shen) (iGetF) (iApply) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst shen.aum_to_shen) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst is) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst shen.a) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst shen.variable) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst shen.pvar?) (iAccess 0) (iPrimCall 32) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst is) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst shen.a) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst shen.non-empty) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst list) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst cons?) (iAccess 0) (iPrimCall 32) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst shen.rename) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst shen.the) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst shen.variables) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst in) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst and) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst shen.then) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst shen.aum_to_shen) (iGetF) (iTailApply)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst shen.rename) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst shen.the) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst shen.variables) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst in) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst and) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst shen.then) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst let) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 32) (iConst shen.newpv) (iConst ProcessN) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iMark) (iConst shen.rename) (iConst shen.the) (iConst shen.variables) (iConst in) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 33) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst shen.aum_to_shen) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst bind) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst shen.to) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst in) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst do) (iConst shen.bindv) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst shen.chwild) (iGetF) (iApply) (iConst ProcessN) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst let) (iConst Result) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst shen.aum_to_shen) (iGetF) (iApply) (iConst do) (iConst shen.unbindv) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst ProcessN) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst Result) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst is) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst identical) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst shen.to) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst =) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iAccess 0) (iPrimCall 32) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst shen.failed!) (iAccess 0) (iPrimCall 19) (iJF (iConst false) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst shen.the) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst head) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst shen.of) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst hd) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst shen.the) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst tail) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst shen.of) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst tl) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst shen.pop) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst shen.the) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst shen.stack) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst do) (iConst shen.incinfs) (iConst ()) (iPrimCall 34) (iConst thaw) (iConst Continuation) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst call) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst shen.the) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst shen.continuation) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst do) (iConst shen.incinfs) (iConst ()) (iPrimCall 34) (iMark) (iConst Continuation) (iConst ProcessN) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst shen.chwild) (iGetF) (iApply) (iConst shen.call_the_continuation) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))))))))))))))) (iConst shen.aum_to_shen) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iConst _) (iPrimCall 19) (iJF (iConst shen.newpv) (iConst ProcessN) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iFreeze (iGrab) (iAccess 0) (iConst shen.chwild) (iGetF) (iTailApply)) (iConst map) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.chwild) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst shen.*varcounter*) (iPrimCall 36) (iAccess 0) (iPrimCall 9) (iConst 1) (iPrimCall 23) (iFreeze (iGrab) (iConst shen.*varcounter*) (iPrimCall 36) (iAccess 1) (iAccess 0) (iPrimCall 10) (iFreeze (iGrab) (iConst shen.*prologvectors*) (iPrimCall 36) (iAccess 2) (iPrimCall 9) (iFreeze (iGrab) (iAccess 2) (iMark) (iAccess 0) (iConst limit) (iGetF) (iApply) (iPrimCall 19) (iJF (iMark) (iAccess 2) (iAccess 3) (iConst shen.resizeprocessvector) (iGetF) (iApply)) (iJMP (iConst shen.skip)) (iFreeze (iGrab) (iAccess 3) (iConst shen.mk-pvar) (iGetF) (iTailApply)) (iTailApply)) (iTailApply)) (iTailApply)) (iTailApply)) (iConst shen.newpv) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iConst shen.*prologvectors*) (iPrimCall 36) (iAccess 1) (iPrimCall 9) (iFreeze (iGrab) (iMark) (iConst shen.-null-) (iAccess 1) (iAccess 1) (iPrimCall 23) (iAccess 0) (iConst shen.resize-vector) (iGetF) (iApply) (iFreeze (iGrab) (iConst shen.*prologvectors*) (iPrimCall 36) (iAccess 3) (iAccess 0) (iPrimCall 10) (iReturn)) (iTailApply)) (iTailApply)) (iConst shen.resizeprocessvector) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iConst 1) (iAccess 1) (iPrimCall 23) (iPrimCall 11) (iConst 0) (iAccess 1) (iPrimCall 10) (iFreeze (iGrab) (iAccess 1) (iAccess 2) (iMark) (iAccess 3) (iConst limit) (iGetF) (iApply) (iAccess 0) (iAccess 3) (iConst shen.copy-vector) (iGetF) (iTailApply)) (iTailApply)) (iConst shen.resize-vector) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iGrab) (iGrab) (iMark) (iConst 1) (iAccess 2) (iPrimCall 23) (iAccess 3) (iAccess 4) (iConst 1) (iConst shen.copy-vector-stage-1) (iGetF) (iApply) (iAccess 0) (iAccess 1) (iConst 1) (iPrimCall 23) (iConst 1) (iAccess 2) (iPrimCall 23) (iConst shen.copy-vector-stage-2) (iGetF) (iTailApply)) (iConst shen.copy-vector) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iGrab) (iAccess 0) (iAccess 3) (iPrimCall 19) (iJF (iAccess 1) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iAccess 1) (iAccess 3) (iAccess 2) (iAccess 3) (iPrimCall 9) (iPrimCall 10) (iAccess 2) (iConst 1) (iAccess 3) (iPrimCall 23) (iConst shen.copy-vector-stage-1) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.copy-vector-stage-1) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iGrab) (iAccess 2) (iAccess 3) (iPrimCall 19) (iJF (iAccess 0) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iAccess 3) (iAccess 1) (iPrimCall 10) (iAccess 1) (iAccess 2) (iAccess 3) (iConst 1) (iPrimCall 23) (iConst shen.copy-vector-stage-2) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.copy-vector-stage-2) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst 2) (iPrimCall 11) (iConst 0) (iConst shen.pvar) (iPrimCall 10) (iConst 1) (iAccess 0) (iPrimCall 10) (iReturn)) (iConst shen.mk-pvar) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 8) (iJF (iMark) (iFreeze (iConst shen.not-pvar) (iReturn)) (iConst 0) (iAccess 0) (iConst <-address/or) (iGetF) (iApply) (iConst shen.pvar) (iPrimCall 19) (iReturn)) (iJMP (iConst false) (iReturn))) (iConst shen.pvar?) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iConst shen.*prologvectors*) (iPrimCall 36) (iAccess 0) (iPrimCall 9) (iFreeze (iGrab) (iAccess 0) (iAccess 3) (iConst 1) (iPrimCall 9) (iAccess 2) (iPrimCall 10) (iReturn)) (iTailApply)) (iConst shen.bindv) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iConst shen.*prologvectors*) (iPrimCall 36) (iAccess 0) (iPrimCall 9) (iFreeze (iGrab) (iAccess 0) (iAccess 2) (iConst 1) (iPrimCall 9) (iConst shen.-null-) (iPrimCall 10) (iReturn)) (iTailApply)) (iConst shen.unbindv) (iDefun) (iReturn) (iHalt))

((iFreeze (iConst shen.*infs*) (iConst 1) (iConst shen.*infs*) (iPrimCall 36) (iPrimCall 23) (iPrimCall 37) (iReturn)) (iConst shen.incinfs) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iAccess 2) (iPrimCall 35) (iJF (iAccess 2) (iPrimCall 32) (iPrimCall 35) (iJF (iConst ()) (iAccess 2) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 2) (iPrimCall 32) (iPrimCall 32) (iMark) (iAccess 1) (iAccess 0) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iAccess 2) (iPrimCall 32) (iPrimCall 33) (iConst append) (iGetF) (iApply) (iPrimCall 34) (iReturn)) (iJMP (iAccess 2) (iPrimCall 35) (iJF (iAccess 2) (iPrimCall 32) (iPrimCall 35)) (iJMP (iConst false)) (iJF (iMark) (iAccess 0) (iAccess 1) (iAccess 2) (iPrimCall 33) (iConst shen.newcontinuation) (iGetF) (iApply) (iFreeze (iGrab) (iAccess 3) (iPrimCall 32) (iPrimCall 32) (iMark) (iAccess 2) (iAccess 0) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iAccess 3) (iPrimCall 32) (iPrimCall 33) (iConst append) (iGetF) (iApply) (iPrimCall 34) (iReturn)) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.call_the_continuation) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.call_the_continuation) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iConst ()) (iAccess 2) (iPrimCall 19) (iJF (iAccess 0) (iReturn)) (iJMP (iAccess 2) (iPrimCall 35) (iJF (iAccess 2) (iPrimCall 32) (iPrimCall 35)) (iJMP (iConst false)) (iJF (iConst freeze) (iAccess 2) (iPrimCall 32) (iPrimCall 32) (iMark) (iAccess 1) (iMark) (iAccess 0) (iAccess 1) (iAccess 2) (iPrimCall 33) (iConst shen.newcontinuation) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iAccess 2) (iPrimCall 32) (iPrimCall 33) (iConst append) (iGetF) (iApply) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iConst shen.newcontinuation) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.newcontinuation) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iAccess 1) (iAccess 2) (iConst shen.deref) (iGetF) (iTailApply)) (iConst return) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iMark) (iMark) (iConst stoutput) (iGetF) (iApply) (iMark) (iConst shen.a) (iConst " inferences
") (iConst shen.*infs*) (iPrimCall 36) (iConst shen.app) (iGetF) (iApply) (iConst shen.prhush) (iGetF) (iApply) (iPop) (iAccess 1) (iAccess 2) (iConst shen.deref) (iGetF) (iTailApply)) (iConst shen.measure&return) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iGrab) (iAccess 0) (iAccess 1) (iMark) (iAccess 1) (iAccess 2) (iConst shen.lazyderef) (iGetF) (iApply) (iMark) (iAccess 1) (iAccess 3) (iConst shen.lazyderef) (iGetF) (iApply) (iConst shen.lzy=) (iGetF) (iTailApply)) (iConst unify) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iGrab) (iAccess 2) (iAccess 3) (iPrimCall 19) (iJF (iAccess 0) (iConst thaw) (iGetF) (iTailApply)) (iJMP (iMark) (iAccess 3) (iConst shen.pvar?) (iGetF) (iApply) (iJF (iAccess 0) (iAccess 1) (iAccess 2) (iAccess 3) (iConst bind) (iGetF) (iTailApply)) (iJMP (iMark) (iAccess 2) (iConst shen.pvar?) (iGetF) (iApply) (iJF (iAccess 0) (iAccess 1) (iAccess 3) (iAccess 2) (iConst bind) (iGetF) (iTailApply)) (iJMP (iAccess 3) (iPrimCall 35) (iJF (iAccess 2) (iPrimCall 35)) (iJMP (iConst false)) (iJF (iFreeze (iAccess 0) (iAccess 1) (iMark) (iAccess 1) (iAccess 2) (iPrimCall 33) (iConst shen.lazyderef) (iGetF) (iApply) (iMark) (iAccess 1) (iAccess 3) (iPrimCall 33) (iConst shen.lazyderef) (iGetF) (iApply) (iConst shen.lzy=) (iGetF) (iTailApply)) (iAccess 1) (iMark) (iAccess 1) (iAccess 2) (iPrimCall 32) (iConst shen.lazyderef) (iGetF) (iApply) (iMark) (iAccess 1) (iAccess 3) (iPrimCall 32) (iConst shen.lazyderef) (iGetF) (iApply) (iConst shen.lzy=) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst false) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))))) (iConst shen.lzy=) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iAccess 1) (iPrimCall 35) (iJF (iMark) (iAccess 0) (iAccess 1) (iPrimCall 32) (iConst shen.deref) (iGetF) (iApply) (iMark) (iAccess 0) (iAccess 1) (iPrimCall 33) (iConst shen.deref) (iGetF) (iApply) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iMark) (iAccess 1) (iConst shen.pvar?) (iGetF) (iApply) (iJF (iMark) (iAccess 0) (iAccess 1) (iConst shen.valvector) (iGetF) (iApply) (iFreeze (iGrab) (iAccess 0) (iConst shen.-null-) (iPrimCall 19) (iJF (iAccess 2) (iReturn)) (iJMP (iAccess 1) (iAccess 0) (iConst shen.deref) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iAccess 1) (iReturn))) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.deref) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iMark) (iAccess 1) (iConst shen.pvar?) (iGetF) (iApply) (iJF (iMark) (iAccess 0) (iAccess 1) (iConst shen.valvector) (iGetF) (iApply) (iFreeze (iGrab) (iAccess 0) (iConst shen.-null-) (iPrimCall 19) (iJF (iAccess 2) (iReturn)) (iJMP (iAccess 1) (iAccess 0) (iConst shen.lazyderef) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iAccess 1) (iReturn))) (iConst shen.lazyderef) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iConst shen.*prologvectors*) (iPrimCall 36) (iAccess 0) (iPrimCall 9) (iAccess 1) (iConst 1) (iPrimCall 9) (iPrimCall 9) (iReturn)) (iConst shen.valvector) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iGrab) (iAccess 0) (iAccess 1) (iMark) (iAccess 1) (iAccess 2) (iConst shen.lazyderef) (iGetF) (iApply) (iMark) (iAccess 1) (iAccess 3) (iConst shen.lazyderef) (iGetF) (iApply) (iConst shen.lzy=!) (iGetF) (iTailApply)) (iConst unify!) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iGrab) (iAccess 2) (iAccess 3) (iPrimCall 19) (iJF (iAccess 0) (iConst thaw) (iGetF) (iTailApply)) (iJMP (iMark) (iAccess 3) (iConst shen.pvar?) (iGetF) (iApply) (iJF (iMark) (iMark) (iAccess 1) (iAccess 2) (iConst shen.deref) (iGetF) (iApply) (iAccess 3) (iConst shen.occurs?) (iGetF) (iApply) (iPrimCall 38)) (iJMP (iConst false)) (iJF (iAccess 0) (iAccess 1) (iAccess 2) (iAccess 3) (iConst bind) (iGetF) (iTailApply)) (iJMP (iMark) (iAccess 2) (iConst shen.pvar?) (iGetF) (iApply) (iJF (iMark) (iMark) (iAccess 1) (iAccess 3) (iConst shen.deref) (iGetF) (iApply) (iAccess 2) (iConst shen.occurs?) (iGetF) (iApply) (iPrimCall 38)) (iJMP (iConst false)) (iJF (iAccess 0) (iAccess 1) (iAccess 3) (iAccess 2) (iConst bind) (iGetF) (iTailApply)) (iJMP (iAccess 3) (iPrimCall 35) (iJF (iAccess 2) (iPrimCall 35)) (iJMP (iConst false)) (iJF (iFreeze (iAccess 0) (iAccess 1) (iMark) (iAccess 1) (iAccess 2) (iPrimCall 33) (iConst shen.lazyderef) (iGetF) (iApply) (iMark) (iAccess 1) (iAccess 3) (iPrimCall 33) (iConst shen.lazyderef) (iGetF) (iApply) (iConst shen.lzy=!) (iGetF) (iTailApply)) (iAccess 1) (iMark) (iAccess 1) (iAccess 2) (iPrimCall 32) (iConst shen.lazyderef) (iGetF) (iApply) (iMark) (iAccess 1) (iAccess 3) (iPrimCall 32) (iConst shen.lazyderef) (iGetF) (iApply) (iConst shen.lzy=!) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst false) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))))) (iConst shen.lzy=!) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iAccess 0) (iAccess 1) (iPrimCall 19) (iJF (iConst true) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iMark) (iAccess 0) (iPrimCall 32) (iAccess 1) (iConst shen.occurs?) (iGetF) (iApply) (iJF (iConst true) (iReturn)) (iJMP (iAccess 0) (iPrimCall 33) (iAccess 1) (iConst shen.occurs?) (iGetF) (iTailApply))) (iJMP (iConst true) (iJF (iConst false) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.occurs?) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iGrab) (iAccess 0) (iAccess 1) (iMark) (iAccess 1) (iAccess 2) (iConst shen.lazyderef) (iGetF) (iApply) (iMark) (iAccess 1) (iAccess 3) (iConst shen.lazyderef) (iGetF) (iApply) (iConst shen.lzy==) (iGetF) (iTailApply)) (iConst identical) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iGrab) (iAccess 2) (iAccess 3) (iPrimCall 19) (iJF (iAccess 0) (iConst thaw) (iGetF) (iTailApply)) (iJMP (iAccess 3) (iPrimCall 35) (iJF (iAccess 2) (iPrimCall 35)) (iJMP (iConst false)) (iJF (iFreeze (iAccess 0) (iAccess 1) (iAccess 2) (iPrimCall 33) (iAccess 3) (iPrimCall 33) (iConst shen.lzy==) (iGetF) (iTailApply)) (iAccess 1) (iMark) (iAccess 1) (iAccess 2) (iPrimCall 32) (iConst shen.lazyderef) (iGetF) (iApply) (iMark) (iAccess 1) (iAccess 3) (iPrimCall 32) (iConst shen.lazyderef) (iGetF) (iApply) (iConst shen.lzy==) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst false) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.lzy==) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst "Var") (iMark) (iConst shen.a) (iConst "") (iAccess 0) (iConst 1) (iPrimCall 9) (iConst shen.app) (iGetF) (iApply) (iPrimCall 30) (iReturn)) (iConst shen.pvar) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iGrab) (iMark) (iAccess 1) (iAccess 2) (iAccess 3) (iConst shen.bindv) (iGetF) (iApply) (iPop) (iMark) (iAccess 0) (iConst thaw) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iAccess 2) (iAccess 4) (iConst shen.unbindv) (iGetF) (iApply) (iPop) (iAccess 0) (iReturn)) (iTailApply)) (iConst bind) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iConst true) (iAccess 2) (iPrimCall 19) (iJF (iAccess 0) (iConst thaw) (iGetF) (iTailApply)) (iJMP (iConst false) (iAccess 2) (iPrimCall 19) (iJF (iConst false) (iReturn)) (iJMP (iConst true) (iJF (iConst "fwhen expects a boolean: not ") (iMark) (iConst shen.s) (iConst "%") (iAccess 2) (iConst shen.app) (iGetF) (iApply) (iPrimCall 30) (iPrimCall 18) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst fwhen) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iAccess 2) (iPrimCall 35) (iJF (iAccess 0) (iAccess 1) (iAccess 2) (iPrimCall 33) (iMark) (iMark) (iAccess 1) (iAccess 2) (iPrimCall 32) (iConst shen.lazyderef) (iGetF) (iApply) (iConst function) (iGetF) (iApply) (iConst shen.call-help) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst false) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst call) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iGrab) (iConst ()) (iAccess 2) (iPrimCall 19) (iJF (iAccess 0) (iAccess 1) (iAccess 3) (iTailApply)) (iJMP (iAccess 2) (iPrimCall 35) (iJF (iAccess 0) (iAccess 1) (iAccess 2) (iPrimCall 33) (iMark) (iAccess 2) (iPrimCall 32) (iAccess 3) (iApply) (iConst shen.call-help) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.call-help) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.call-help) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 35)) (iJMP (iConst false)) (iJF (iMark) (iConst shen.start-new-prolog-process) (iGetF) (iApply) (iFreeze (iGrab) (iAccess 0) (iMark) (iAccess 0) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iAccess 1) (iPrimCall 33) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst shen.insert-prolog-variables) (iGetF) (iApply) (iAccess 1) (iPrimCall 32) (iPrimCall 32) (iConst shen.intprolog-help) (iGetF) (iTailApply)) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.intprolog) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.intprolog) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iAccess 1) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iAccess 1) (iPrimCall 33) (iPrimCall 32) (iAccess 1) (iPrimCall 32) (iAccess 2) (iConst shen.intprolog-help-help) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.intprolog-help) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.intprolog-help) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iGrab) (iConst ()) (iAccess 2) (iPrimCall 19) (iJF (iFreeze (iAccess 0) (iAccess 1) (iConst shen.call-rest) (iGetF) (iTailApply)) (iAccess 0) (iAccess 3) (iTailApply)) (iJMP (iAccess 2) (iPrimCall 35) (iJF (iAccess 0) (iAccess 1) (iAccess 2) (iPrimCall 33) (iMark) (iAccess 2) (iPrimCall 32) (iAccess 3) (iApply) (iConst shen.intprolog-help-help) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.intprolog-help-help) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.intprolog-help-help) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iConst ()) (iAccess 1) (iPrimCall 19) (iJF (iConst true) (iReturn)) (iJMP (iAccess 1) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 35)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iMark) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 32) (iAccess 1) (iPrimCall 32) (iPrimCall 32) (iApply) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 34) (iAccess 1) (iPrimCall 33) (iPrimCall 34) (iConst shen.call-rest) (iGetF) (iTailApply)) (iJMP (iAccess 1) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 35) (iJF (iConst ()) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iFreeze (iAccess 0) (iAccess 1) (iPrimCall 33) (iConst shen.call-rest) (iGetF) (iTailApply)) (iAccess 0) (iAccess 1) (iPrimCall 32) (iPrimCall 32) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.call-rest) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))))) (iConst shen.call-rest) (iDefun) (iReturn) (iHalt))

((iFreeze (iConst shen.*process-counter*) (iConst 1) (iConst shen.*process-counter*) (iPrimCall 36) (iPrimCall 23) (iPrimCall 37) (iFreeze (iGrab) (iAccess 0) (iConst shen.initialise-prolog) (iGetF) (iTailApply)) (iTailApply)) (iConst shen.start-new-prolog-process) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iAccess 0) (iMark) (iAccess 1) (iConst shen.flatten) (iGetF) (iApply) (iAccess 1) (iConst shen.insert-prolog-variables-help) (iGetF) (iTailApply)) (iConst shen.insert-prolog-variables) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iConst ()) (iAccess 1) (iPrimCall 19) (iJF (iAccess 2) (iReturn)) (iJMP (iAccess 1) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 45)) (iJMP (iConst false)) (iJF (iMark) (iAccess 0) (iConst shen.newpv) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iAccess 3) (iAccess 2) (iPrimCall 32) (iAccess 0) (iConst subst) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iAccess 3) (iPrimCall 33) (iAccess 3) (iPrimCall 32) (iConst remove) (iGetF) (iApply) (iFreeze (iGrab) (iAccess 3) (iAccess 0) (iAccess 1) (iConst shen.insert-prolog-variables-help) (iGetF) (iTailApply)) (iTailApply)) (iTailApply)) (iTailApply)) (iJMP (iAccess 1) (iPrimCall 35) (iJF (iAccess 0) (iAccess 1) (iPrimCall 33) (iAccess 2) (iConst shen.insert-prolog-variables-help) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.insert-prolog-variables-help) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))))) (iConst shen.insert-prolog-variables-help) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst shen.*prologvectors*) (iPrimCall 36) (iAccess 0) (iMark) (iConst shen.-null-) (iConst 10) (iConst 1) (iMark) (iConst 10) (iConst vector) (iGetF) (iApply) (iConst shen.fillvector) (iGetF) (iApply) (iPrimCall 10) (iFreeze (iGrab) (iConst shen.*varcounter*) (iPrimCall 36) (iAccess 1) (iConst 1) (iPrimCall 10) (iFreeze (iGrab) (iAccess 2) (iReturn)) (iTailApply)) (iTailApply)) (iConst shen.initialise-prolog) (iDefun) (iReturn) (iHalt))



