((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst "datatype syntax error here:

 ") (iMark) (iConst shen.a) (iConst "
") (iMark) (iAccess 0) (iPrimCall 32) (iConst 50) (iConst shen.next-50) (iGetF) (iApply) (iConst shen.app) (iGetF) (iApply) (iPrimCall 30) (iPrimCall 18) (iReturn)) (iJMP (iConst true) (iJF (iConst shen.datatype-error) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.datatype-error) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iMark) (iAccess 0) (iConst shen.<datatype-rule>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 0) (iConst shen.<datatype-rules>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 1) (iConst shen.hdtl) (iGetF) (iApply) (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iPrimCall 34) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iApply) (iFreeze (iGrab) (iAccess 0) (iMark) (iConst fail) (iGetF) (iApply) (iPrimCall 19) (iJF (iMark) (iAccess 1) (iConst <e>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iConst ()) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iAccess 0) (iReturn))) (iTailApply)) (iConst shen.<datatype-rules>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iMark) (iAccess 0) (iConst shen.<side-conditions>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 0) (iConst shen.<premises>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 0) (iConst shen.<singleunderline>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 0) (iConst shen.<conclusion>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iMark) (iAccess 3) (iConst shen.hdtl) (iGetF) (iApply) (iMark) (iAccess 2) (iConst shen.hdtl) (iGetF) (iApply) (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst shen.single) (iConst shen.sequent) (iGetF) (iApply) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iApply) (iFreeze (iGrab) (iAccess 0) (iMark) (iConst fail) (iGetF) (iApply) (iPrimCall 19) (iJF (iMark) (iAccess 1) (iConst shen.<side-conditions>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 0) (iConst shen.<premises>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 0) (iConst shen.<doubleunderline>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 0) (iConst shen.<conclusion>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iMark) (iAccess 3) (iConst shen.hdtl) (iGetF) (iApply) (iMark) (iAccess 2) (iConst shen.hdtl) (iGetF) (iApply) (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst shen.double) (iConst shen.sequent) (iGetF) (iApply) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iAccess 0) (iReturn))) (iTailApply)) (iConst shen.<datatype-rule>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iMark) (iAccess 0) (iConst shen.<side-condition>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 0) (iConst shen.<side-conditions>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 1) (iConst shen.hdtl) (iGetF) (iApply) (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iPrimCall 34) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iApply) (iFreeze (iGrab) (iAccess 0) (iMark) (iConst fail) (iGetF) (iApply) (iPrimCall 19) (iJF (iMark) (iAccess 1) (iConst <e>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iConst ()) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iAccess 0) (iReturn))) (iTailApply)) (iConst shen.<side-conditions>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 32) (iPrimCall 35) (iJF (iConst if) (iAccess 0) (iPrimCall 32) (iPrimCall 32) (iPrimCall 19)) (iJMP (iConst false)) (iJF (iMark) (iMark) (iMark) (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iAccess 0) (iPrimCall 32) (iPrimCall 33) (iConst shen.pair) (iGetF) (iApply) (iConst shen.<expr>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iConst if) (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iApply)) (iJMP (iMark) (iConst fail) (iGetF) (iApply)) (iFreeze (iGrab) (iAccess 0) (iMark) (iConst fail) (iGetF) (iApply) (iPrimCall 19) (iJF (iAccess 1) (iPrimCall 32) (iPrimCall 35) (iJF (iConst let) (iAccess 1) (iPrimCall 32) (iPrimCall 32) (iPrimCall 19)) (iJMP (iConst false)) (iJF (iMark) (iMark) (iMark) (iAccess 1) (iConst shen.hdtl) (iGetF) (iApply) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iConst shen.pair) (iGetF) (iApply) (iConst shen.<variable?>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 0) (iConst shen.<expr>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iConst let) (iMark) (iAccess 1) (iConst shen.hdtl) (iGetF) (iApply) (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iJMP (iAccess 0) (iReturn))) (iTailApply)) (iConst shen.<side-condition>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 32) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 32) (iFreeze (iGrab) (iAccess 0) (iPrimCall 44) (iJF (iAccess 0) (iMark) (iMark) (iAccess 1) (iConst shen.hdtl) (iGetF) (iApply) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iConst shen.pair) (iGetF) (iApply) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iConst shen.<variable?>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 32) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 32) (iFreeze (iGrab) (iMark) (iConst >>) (iConst ;) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iAccess 0) (iConst element?) (iGetF) (iApply) (iJF (iConst true)) (iJMP (iMark) (iAccess 0) (iConst shen.singleunderline?) (iGetF) (iApply) (iJF (iConst true)) (iJMP (iMark) (iAccess 0) (iConst shen.doubleunderline?) (iGetF) (iApply))) (iPrimCall 38) (iJF (iMark) (iAccess 0) (iConst shen.remove-bar) (iGetF) (iApply) (iMark) (iMark) (iAccess 1) (iConst shen.hdtl) (iGetF) (iApply) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iConst shen.pair) (iGetF) (iApply) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iConst shen.<expr>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst bar!) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iAccess 0) (iPrimCall 32) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iMark) (iAccess 0) (iPrimCall 32) (iConst shen.remove-bar) (iGetF) (iApply) (iMark) (iAccess 0) (iPrimCall 33) (iConst shen.remove-bar) (iGetF) (iApply) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.remove-bar) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iMark) (iAccess 0) (iConst shen.<premise>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 0) (iConst shen.<semicolon-symbol>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 0) (iConst shen.<premises>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 2) (iConst shen.hdtl) (iGetF) (iApply) (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iPrimCall 34) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iApply) (iFreeze (iGrab) (iAccess 0) (iMark) (iConst fail) (iGetF) (iApply) (iPrimCall 19) (iJF (iMark) (iAccess 1) (iConst <e>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iConst ()) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iAccess 0) (iReturn))) (iTailApply)) (iConst shen.<premises>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 32) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 32) (iFreeze (iGrab) (iAccess 0) (iConst ;) (iPrimCall 19) (iJF (iConst shen.skip) (iMark) (iMark) (iAccess 1) (iConst shen.hdtl) (iGetF) (iApply) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iConst shen.pair) (iGetF) (iApply) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iConst shen.<semicolon-symbol>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 32) (iPrimCall 35) (iJF (iConst !) (iAccess 0) (iPrimCall 32) (iPrimCall 32) (iPrimCall 19)) (iJMP (iConst false)) (iJF (iMark) (iConst !) (iMark) (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iAccess 0) (iPrimCall 32) (iPrimCall 33) (iConst shen.pair) (iGetF) (iApply) (iPrimCall 32) (iConst shen.pair) (iGetF) (iApply)) (iJMP (iMark) (iConst fail) (iGetF) (iApply)) (iFreeze (iGrab) (iAccess 0) (iMark) (iConst fail) (iGetF) (iApply) (iPrimCall 19) (iJF (iMark) (iMark) (iAccess 1) (iConst shen.<formulae>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 35) (iJF (iConst >>) (iAccess 0) (iPrimCall 32) (iPrimCall 32) (iPrimCall 19)) (iJMP (iConst false)) (iJF (iMark) (iMark) (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iAccess 0) (iPrimCall 32) (iPrimCall 33) (iConst shen.pair) (iGetF) (iApply) (iConst shen.<formula>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iMark) (iAccess 1) (iConst shen.hdtl) (iGetF) (iApply) (iConst shen.sequent) (iGetF) (iApply) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iJMP (iConst fail) (iGetF) (iTailApply))) (iApply) (iFreeze (iGrab) (iAccess 0) (iMark) (iConst fail) (iGetF) (iApply) (iPrimCall 19) (iJF (iMark) (iAccess 2) (iConst shen.<formula>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iConst ()) (iConst shen.sequent) (iGetF) (iApply) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iAccess 0) (iReturn))) (iTailApply)) (iJMP (iAccess 0) (iReturn))) (iTailApply)) (iConst shen.<premise>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iMark) (iAccess 0) (iConst shen.<formulae>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 35) (iJF (iConst >>) (iAccess 0) (iPrimCall 32) (iPrimCall 32) (iPrimCall 19)) (iJMP (iConst false)) (iJF (iMark) (iMark) (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iAccess 0) (iPrimCall 32) (iPrimCall 33) (iConst shen.pair) (iGetF) (iApply) (iConst shen.<formula>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 0) (iConst shen.<semicolon-symbol>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iMark) (iAccess 1) (iConst shen.hdtl) (iGetF) (iApply) (iMark) (iAccess 2) (iConst shen.hdtl) (iGetF) (iApply) (iConst shen.sequent) (iGetF) (iApply) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iJMP (iConst fail) (iGetF) (iTailApply))) (iApply) (iFreeze (iGrab) (iAccess 0) (iMark) (iConst fail) (iGetF) (iApply) (iPrimCall 19) (iJF (iMark) (iAccess 1) (iConst shen.<formula>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 0) (iConst shen.<semicolon-symbol>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iMark) (iAccess 1) (iConst shen.hdtl) (iGetF) (iApply) (iConst ()) (iConst shen.sequent) (iGetF) (iApply) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iAccess 0) (iReturn))) (iTailApply)) (iConst shen.<conclusion>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iAccess 0) (iAccess 1) (iConst @p) (iGetF) (iTailApply)) (iConst shen.sequent) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iMark) (iAccess 0) (iConst shen.<formula>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 0) (iConst shen.<comma-symbol>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 0) (iConst shen.<formulae>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 2) (iConst shen.hdtl) (iGetF) (iApply) (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iPrimCall 34) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iApply) (iFreeze (iGrab) (iAccess 0) (iMark) (iConst fail) (iGetF) (iApply) (iPrimCall 19) (iJF (iMark) (iMark) (iAccess 1) (iConst shen.<formula>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iApply) (iFreeze (iGrab) (iAccess 0) (iMark) (iConst fail) (iGetF) (iApply) (iPrimCall 19) (iJF (iMark) (iAccess 2) (iConst <e>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iConst ()) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iAccess 0) (iReturn))) (iTailApply)) (iJMP (iAccess 0) (iReturn))) (iTailApply)) (iConst shen.<formulae>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 32) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 32) (iFreeze (iGrab) (iAccess 0) (iConst ",") (iPrimCall 31) (iPrimCall 19) (iJF (iConst shen.skip) (iMark) (iMark) (iAccess 1) (iConst shen.hdtl) (iGetF) (iApply) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iConst shen.pair) (iGetF) (iApply) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iConst shen.<comma-symbol>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iMark) (iAccess 0) (iConst shen.<expr>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 35) (iJF (iConst :) (iAccess 0) (iPrimCall 32) (iPrimCall 32) (iPrimCall 19)) (iJMP (iConst false)) (iJF (iMark) (iMark) (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iAccess 0) (iPrimCall 32) (iPrimCall 33) (iConst shen.pair) (iGetF) (iApply) (iConst shen.<type>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iMark) (iAccess 1) (iConst shen.hdtl) (iGetF) (iApply) (iConst shen.curry) (iGetF) (iApply) (iConst :) (iMark) (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iConst shen.demodulate) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iJMP (iConst fail) (iGetF) (iTailApply))) (iApply) (iFreeze (iGrab) (iAccess 0) (iMark) (iConst fail) (iGetF) (iApply) (iPrimCall 19) (iJF (iMark) (iAccess 1) (iConst shen.<expr>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iAccess 0) (iReturn))) (iTailApply)) (iConst shen.<formula>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iAccess 0) (iConst shen.<expr>) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst fail) (iGetF) (iApply) (iAccess 0) (iPrimCall 19) (iPrimCall 38) (iJF (iMark) (iMark) (iAccess 0) (iConst shen.hdtl) (iGetF) (iApply) (iConst shen.curry-type) (iGetF) (iApply) (iAccess 0) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iConst shen.<type>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 32) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 32) (iFreeze (iGrab) (iMark) (iAccess 0) (iConst shen.doubleunderline?) (iGetF) (iApply) (iJF (iAccess 0) (iMark) (iMark) (iAccess 1) (iConst shen.hdtl) (iGetF) (iApply) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iConst shen.pair) (iGetF) (iApply) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iConst shen.<doubleunderline>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 32) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 32) (iFreeze (iGrab) (iMark) (iAccess 0) (iConst shen.singleunderline?) (iGetF) (iApply) (iJF (iAccess 0) (iMark) (iMark) (iAccess 1) (iConst shen.hdtl) (iGetF) (iApply) (iAccess 1) (iPrimCall 32) (iPrimCall 33) (iConst shen.pair) (iGetF) (iApply) (iPrimCall 32) (iConst shen.pair) (iGetF) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst fail) (iGetF) (iTailApply))) (iConst shen.<singleunderline>) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 40) (iJF (iAccess 0) (iPrimCall 12) (iConst shen.sh?) (iGetF) (iTailApply)) (iJMP (iConst false) (iReturn))) (iConst shen.singleunderline?) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst "_") (iAccess 0) (iPrimCall 19) (iJF (iConst true) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iConst 0) (iPrimCall 28) (iConst "_") (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 29) (iConst shen.sh?) (iGetF) (iTailApply)) (iJMP (iConst false) (iReturn))) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.sh?) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 40) (iJF (iAccess 0) (iPrimCall 12) (iConst shen.dh?) (iGetF) (iTailApply)) (iJMP (iConst false) (iReturn))) (iConst shen.doubleunderline?) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst "=") (iAccess 0) (iPrimCall 19) (iJF (iConst true) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iConst 0) (iPrimCall 28) (iConst "=") (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 29) (iConst shen.dh?) (iGetF) (iTailApply)) (iJMP (iConst false) (iReturn))) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.dh?) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iMark) (iMark) (iAccess 0) (iAccess 1) (iConst shen.rules->horn-clauses) (iGetF) (iApply) (iConst shen.s-prolog) (iGetF) (iApply) (iConst shen.remember-datatype) (iGetF) (iTailApply)) (iConst shen.process-datatype) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst shen.*datatypes*) (iMark) (iConst shen.*datatypes*) (iPrimCall 36) (iAccess 0) (iPrimCall 32) (iConst adjoin) (iGetF) (iApply) (iPrimCall 37) (iPop) (iConst shen.*alldatatypes*) (iMark) (iConst shen.*alldatatypes*) (iPrimCall 36) (iAccess 0) (iPrimCall 32) (iConst adjoin) (iGetF) (iApply) (iPrimCall 37) (iPop) (iAccess 0) (iPrimCall 32) (iReturn)) (iJMP (iConst true) (iJF (iConst shen.remember-datatype) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.remember-datatype) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iConst ()) (iAccess 0) (iPrimCall 19) (iJF (iConst ()) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iMark) (iAccess 0) (iPrimCall 32) (iConst tuple?) (iGetF) (iApply) (iJF (iConst shen.single) (iMark) (iAccess 0) (iPrimCall 32) (iConst fst) (iGetF) (iApply) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iMark) (iMark) (iAccess 0) (iPrimCall 32) (iConst snd) (iGetF) (iApply) (iAccess 1) (iConst shen.rule->horn-clause) (iGetF) (iApply) (iMark) (iAccess 0) (iPrimCall 33) (iAccess 1) (iConst shen.rules->horn-clauses) (iGetF) (iApply) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iMark) (iAccess 0) (iPrimCall 32) (iConst tuple?) (iGetF) (iApply) (iJF (iConst shen.double) (iMark) (iAccess 0) (iPrimCall 32) (iConst fst) (iGetF) (iApply) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iMark) (iAccess 0) (iPrimCall 33) (iMark) (iMark) (iAccess 0) (iPrimCall 32) (iConst snd) (iGetF) (iApply) (iConst shen.double->singles) (iGetF) (iApply) (iConst append) (iGetF) (iApply) (iAccess 1) (iConst shen.rules->horn-clauses) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.rules->horn-clauses) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))))) (iConst shen.rules->horn-clauses) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iAccess 0) (iConst shen.right-rule) (iGetF) (iApply) (iMark) (iAccess 0) (iConst shen.left-rule) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iConst shen.double->singles) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iConst shen.single) (iConst @p) (iGetF) (iTailApply)) (iConst shen.right-rule) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst tuple?) (iGetF) (iApply) (iJF (iConst ()) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst fst) (iGetF) (iApply) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iMark) (iConst Qv) (iConst gensym) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iAccess 0) (iMark) (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst snd) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iConst @p) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iAccess 1) (iMark) (iAccess 2) (iPrimCall 33) (iPrimCall 32) (iFreeze (iGrab) (iAccess 0) (iConst shen.right->left) (iGetF) (iTailApply)) (iConst map) (iGetF) (iApply) (iConst @p) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iFreeze (iGrab) (iAccess 3) (iPrimCall 32) (iAccess 0) (iAccess 1) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst shen.single) (iConst @p) (iGetF) (iTailApply)) (iTailApply)) (iTailApply)) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.left-rule) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.left-rule) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iAccess 0) (iConst tuple?) (iGetF) (iApply) (iJF (iConst ()) (iMark) (iAccess 0) (iConst fst) (iGetF) (iApply) (iPrimCall 19)) (iJMP (iConst false)) (iJF (iAccess 0) (iConst snd) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst "syntax error with ==========
") (iPrimCall 18) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.right->left) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst tuple?) (iGetF) (iApply) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iMark) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst snd) (iGetF) (iApply) (iAccess 1) (iConst shen.rule->horn-clause-head) (iGetF) (iApply) (iConst :-) (iMark) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst fst) (iGetF) (iApply) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iAccess 0) (iPrimCall 32) (iConst shen.rule->horn-clause-body) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iConst shen.rule->horn-clause) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.rule->horn-clause) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iAccess 1) (iMark) (iAccess 0) (iConst shen.mode-ify) (iGetF) (iApply) (iConst Context_1957) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iConst shen.rule->horn-clause-head) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst :) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst mode) (iAccess 0) (iPrimCall 32) (iConst :) (iConst mode) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iConst +) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst -) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.mode-ify) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iMark) (iAccess 0) (iFreeze (iGrab) (iAccess 0) (iConst shen.extract_vars) (iGetF) (iTailApply)) (iConst map) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iAccess 1) (iFreeze (iGrab) (iConst shen.cl) (iConst gensym) (iGetF) (iTailApply)) (iConst map) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iConst Context1_1957) (iConst Context_1957) (iAccess 1) (iAccess 0) (iConst shen.construct-search-literals) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iAccess 2) (iAccess 3) (iAccess 1) (iConst shen.construct-search-clauses) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iAccess 6) (iConst shen.construct-side-literals) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iAccess 6) (iFreeze (iGrab) (iMark) (iAccess 6) (iConst empty?) (iGetF) (iApply) (iAccess 0) (iConst shen.construct-premiss-literal) (iGetF) (iTailApply)) (iConst map) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iAccess 0) (iAccess 1) (iConst append) (iGetF) (iApply) (iAccess 3) (iConst append) (iGetF) (iTailApply)) (iTailApply)) (iTailApply)) (iTailApply)) (iTailApply)) (iTailApply)) (iTailApply)) (iConst shen.rule->horn-clause-body) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iGrab) (iConst ()) (iAccess 3) (iPrimCall 19) (iJF (iConst ()) (iAccess 2) (iPrimCall 19)) (iJMP (iConst false)) (iJF (iConst ()) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iAccess 1) (iAccess 2) (iAccess 3) (iConst shen.csl-help) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.construct-search-literals) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iGrab) (iConst ()) (iAccess 3) (iPrimCall 19) (iJF (iConst ()) (iAccess 2) (iPrimCall 19)) (iJMP (iConst false)) (iJF (iConst bind) (iConst ContextOut_1957) (iAccess 1) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iReturn)) (iJMP (iAccess 3) (iPrimCall 35) (iJF (iAccess 2) (iPrimCall 35)) (iJMP (iConst false)) (iJF (iAccess 3) (iPrimCall 32) (iAccess 1) (iAccess 0) (iAccess 2) (iPrimCall 32) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iMark) (iMark) (iConst Context) (iConst gensym) (iGetF) (iApply) (iAccess 0) (iAccess 2) (iPrimCall 33) (iAccess 3) (iPrimCall 33) (iConst shen.csl-help) (iGetF) (iApply) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iConst shen.csl-help) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.csl-help) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iConst ()) (iAccess 2) (iPrimCall 19) (iJF (iConst ()) (iAccess 1) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst shen.skip) (iReturn)) (iJMP (iAccess 2) (iPrimCall 35) (iJF (iAccess 1) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 35)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iMark) (iAccess 0) (iPrimCall 32) (iAccess 1) (iPrimCall 32) (iAccess 2) (iPrimCall 32) (iConst shen.construct-search-clause) (iGetF) (iApply) (iPop) (iAccess 0) (iPrimCall 33) (iAccess 1) (iPrimCall 33) (iAccess 2) (iPrimCall 33) (iConst shen.construct-search-clauses) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.construct-search-clauses) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.construct-search-clauses) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iMark) (iAccess 0) (iAccess 1) (iAccess 2) (iConst shen.construct-base-search-clause) (iGetF) (iApply) (iMark) (iAccess 0) (iAccess 1) (iAccess 2) (iConst shen.construct-recursive-search-clause) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst shen.s-prolog) (iGetF) (iTailApply)) (iConst shen.construct-search-clause) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iAccess 2) (iMark) (iAccess 1) (iConst shen.mode-ify) (iGetF) (iApply) (iConst In_1957) (iPrimCall 34) (iConst In_1957) (iAccess 0) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst :-) (iConst ()) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iConst shen.construct-base-search-clause) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iGrab) (iAccess 2) (iConst Assumption_1957) (iConst Assumptions_1957) (iPrimCall 34) (iConst Assumption_1957) (iConst Out_1957) (iPrimCall 34) (iAccess 0) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst :-) (iAccess 2) (iConst Assumptions_1957) (iConst Out_1957) (iAccess 0) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iConst shen.construct-recursive-search-clause) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst ()) (iAccess 0) (iPrimCall 19) (iJF (iConst ()) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 35) (iJF (iConst if) (iAccess 0) (iPrimCall 32) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst when) (iAccess 0) (iPrimCall 32) (iPrimCall 33) (iPrimCall 34) (iMark) (iAccess 0) (iPrimCall 33) (iConst shen.construct-side-literals) (iGetF) (iApply) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 35) (iJF (iConst let) (iAccess 0) (iPrimCall 32) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 32) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst is) (iAccess 0) (iPrimCall 32) (iPrimCall 33) (iPrimCall 34) (iMark) (iAccess 0) (iPrimCall 33) (iConst shen.construct-side-literals) (iGetF) (iApply) (iPrimCall 34) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iConst shen.construct-side-literals) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.construct-side-literals) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))))) (iConst shen.construct-side-literals) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iMark) (iAccess 1) (iConst tuple?) (iGetF) (iApply) (iJF (iConst shen.t*) (iMark) (iMark) (iAccess 1) (iConst snd) (iGetF) (iApply) (iConst shen.recursive_cons_form) (iGetF) (iApply) (iMark) (iMark) (iAccess 1) (iConst fst) (iGetF) (iApply) (iAccess 0) (iConst shen.construct-context) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst !) (iAccess 1) (iPrimCall 19) (iJF (iConst cut) (iConst Throwcontrol) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iConst shen.construct-premiss-literal) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.construct-premiss-literal) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iConst true) (iAccess 1) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 19)) (iJMP (iConst false)) (iJF (iConst Context_1957) (iReturn)) (iJMP (iConst false) (iAccess 1) (iPrimCall 19) (iJF (iConst ()) (iAccess 0) (iPrimCall 19)) (iJMP (iConst false)) (iJF (iConst ContextOut_1957) (iReturn)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iConst cons) (iMark) (iAccess 0) (iPrimCall 32) (iConst shen.recursive_cons_form) (iGetF) (iApply) (iMark) (iAccess 0) (iPrimCall 33) (iAccess 1) (iConst shen.construct-context) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iConst shen.construct-context) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))))) (iConst shen.construct-context) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst cons) (iMark) (iAccess 0) (iPrimCall 32) (iConst shen.recursive_cons_form) (iGetF) (iApply) (iMark) (iAccess 0) (iPrimCall 33) (iConst shen.recursive_cons_form) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iAccess 0) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.recursive_cons_form) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iAccess 0) (iFreeze (iGrab) (iAccess 0) (iConst shen.intern-type) (iGetF) (iTailApply)) (iConst map) (iGetF) (iApply) (iConst shen.preclude-h) (iGetF) (iTailApply)) (iConst preclude) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst shen.*datatypes*) (iMark) (iAccess 0) (iConst shen.*datatypes*) (iPrimCall 36) (iConst difference) (iGetF) (iApply) (iPrimCall 37) (iFreeze (iGrab) (iConst shen.*datatypes*) (iPrimCall 36) (iReturn)) (iTailApply)) (iConst shen.preclude-h) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iAccess 0) (iFreeze (iGrab) (iAccess 0) (iConst shen.intern-type) (iGetF) (iTailApply)) (iConst map) (iGetF) (iApply) (iConst shen.include-h) (iGetF) (iTailApply)) (iConst include) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iConst shen.*alldatatypes*) (iPrimCall 36) (iAccess 0) (iConst intersection) (iGetF) (iApply) (iFreeze (iGrab) (iConst shen.*datatypes*) (iMark) (iConst shen.*datatypes*) (iPrimCall 36) (iAccess 0) (iConst union) (iGetF) (iApply) (iPrimCall 37) (iFreeze (iGrab) (iConst shen.*datatypes*) (iPrimCall 36) (iReturn)) (iTailApply)) (iTailApply)) (iConst shen.include-h) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iMark) (iAccess 0) (iFreeze (iGrab) (iAccess 0) (iConst shen.intern-type) (iGetF) (iTailApply)) (iConst map) (iGetF) (iApply) (iConst shen.*alldatatypes*) (iPrimCall 36) (iConst difference) (iGetF) (iApply) (iConst shen.preclude-h) (iGetF) (iTailApply)) (iConst preclude-all-but) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iMark) (iMark) (iAccess 0) (iFreeze (iGrab) (iAccess 0) (iConst shen.intern-type) (iGetF) (iTailApply)) (iConst map) (iGetF) (iApply) (iConst shen.*alldatatypes*) (iPrimCall 36) (iConst difference) (iGetF) (iApply) (iConst shen.include-h) (iGetF) (iTailApply)) (iConst include-all-but) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iConst ()) (iAccess 0) (iPrimCall 19) (iJF (iMark) (iConst shen.*synonyms*) (iPrimCall 36) (iFreeze (iGrab) (iAccess 0) (iConst shen.demod-rule) (iGetF) (iTailApply)) (iConst mapcan) (iGetF) (iApply) (iConst shen.*tc*) (iPrimCall 36) (iConst shen.update-demodulation-function) (iGetF) (iTailApply)) (iJMP (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35)) (iJMP (iConst false)) (iJF (iMark) (iMark) (iAccess 0) (iPrimCall 32) (iConst shen.extract_vars) (iGetF) (iApply) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst shen.extract_vars) (iGetF) (iApply) (iConst difference) (iGetF) (iApply) (iFreeze (iGrab) (iMark) (iAccess 0) (iConst empty?) (iGetF) (iApply) (iJF (iMark) (iConst shen.*synonyms*) (iAccess 1) (iPrimCall 32) (iAccess 1) (iPrimCall 33) (iPrimCall 32) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iConst shen.pushnew) (iGetF) (iApply) (iPop) (iAccess 1) (iPrimCall 33) (iPrimCall 33) (iConst shen.synonyms-help) (iGetF) (iTailApply)) (iJMP (iAccess 0) (iAccess 1) (iPrimCall 33) (iPrimCall 32) (iConst shen.free_variable_warnings) (iGetF) (iTailApply))) (iTailApply)) (iJMP (iConst true) (iJF (iConst "odd number of synonyms
") (iPrimCall 18) (iReturn)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn))))) (iConst shen.synonyms-help) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iMark) (iAccess 0) (iPrimCall 36) (iAccess 1) (iConst element?) (iGetF) (iApply) (iJF (iAccess 0) (iPrimCall 36) (iReturn)) (iJMP (iAccess 0) (iAccess 1) (iAccess 0) (iPrimCall 36) (iPrimCall 34) (iPrimCall 37) (iReturn))) (iConst shen.pushnew) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iMark) (iAccess 0) (iPrimCall 32) (iConst shen.rcons_form) (iGetF) (iApply) (iConst ->) (iMark) (iAccess 0) (iPrimCall 33) (iPrimCall 32) (iConst shen.rcons_form) (iGetF) (iApply) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iJMP (iConst true) (iJF (iConst shen.demod-rule) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.demod-rule) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iAccess 0) (iPrimCall 35) (iJF (iConst defun) (iAccess 0) (iPrimCall 32) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 33) (iPrimCall 19) (iJF (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 35) (iJF (iConst ()) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 19)) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false))) (iJMP (iConst false)) (iJF (iConst /.) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 32) (iPrimCall 32) (iAccess 0) (iPrimCall 33) (iPrimCall 33) (iPrimCall 33) (iPrimCall 34) (iPrimCall 34) (iConst eval) (iGetF) (iTailApply)) (iJMP (iConst true) (iJF (iConst shen.lambda-of-defun) (iConst shen.f_error) (iGetF) (iTailApply)) (iJMP (iConst "no match cond") (iPrimCall 18) (iReturn)))) (iConst shen.lambda-of-defun) (iDefun) (iReturn) (iHalt))

((iFreeze (iGrab) (iGrab) (iMark) (iConst -) (iConst tc) (iGetF) (iApply) (iPop) (iConst shen.*demodulation-function*) (iMark) (iMark) (iConst define) (iConst shen.demod) (iMark) (iMark) (iConst shen.default-rule) (iGetF) (iApply) (iAccess 0) (iConst append) (iGetF) (iApply) (iPrimCall 34) (iPrimCall 34) (iConst shen.elim-def) (iGetF) (iApply) (iConst shen.lambda-of-defun) (iGetF) (iApply) (iPrimCall 37) (iPop) (iAccess 1) (iJF (iMark) (iConst +) (iConst tc) (iGetF) (iApply)) (iJMP (iConst shen.skip)) (iPop) (iConst synonyms) (iReturn)) (iConst shen.update-demodulation-function) (iDefun) (iReturn) (iHalt))

((iFreeze (iConst X) (iConst ->) (iConst X) (iConst ()) (iPrimCall 34) (iPrimCall 34) (iPrimCall 34) (iReturn)) (iConst shen.default-rule) (iDefun) (iReturn) (iHalt))



